apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: svtprometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  namespace: svtprometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: svtprometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: svtprometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      tier: backend
  template:
    metadata:
      labels:
        app: grafana
        tier: backend
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.no-lockfile'
            - '--config.file=/etc/prometheus/prometheus.yml'
          ports:
            - containerPort: 9090
              name: prometheus-port
          volumeMounts:
            - name: config-prometheus
              mountPath: "/etc/prometheus/"
            - name: prometheus-db
              mountPath: "/prometheus"
      volumes:     
        - name: config-prometheus
          configMap:
            name: prometheus-config
        - name: prometheus-db
          persistentVolumeClaim:
            claimName: prometheus-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: svtprometheus
spec:
  selector:
    app: grafana
    tier: backend
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
  type: LoadBalancer